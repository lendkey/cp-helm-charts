## ------------------------------------------------------
## Zookeeper
## ------------------------------------------------------
cp-zookeeper:
  enabled: true
  servers: 3
  image: confluentinc/cp-zookeeper
  imageTag: 5.3.1
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  persistence:
    enabled: false
    ## The size of the PersistentVolume to allocate to each Zookeeper Pod in the StatefulSet. For
    ## production servers this number should likely be much larger.
    ##
    ## Size for Data dir, where ZooKeeper will store the in-memory database snapshots.
    dataDirSize: 10Gi
    # dataDirStorageClass: ""

    ## Size for data log dir, which is a dedicated log device to be used, and helps avoid competition between logging and snaphots.
    dataLogDirSize: 10Gi
    # dataLogDirStorageClass: ""
  resources: {}
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

## ------------------------------------------------------
## Kafka
## ------------------------------------------------------
cp-kafka:
  enabled: true
  brokers: 3
  image: confluentinc/cp-enterprise-kafka
  imageTag: 5.3.1
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  configurationOverrides:
    "offsets.topic.replication.factor": 3
  persistence:
    enabled: false
    # storageClass: ""
    size: 15Gi
    disksPerBroker: 1
  ssl:
    enabled: true
    trustStoreFileData: |
      /u3+7QAAAAIAAAABAAAAAgAGY2Fyb290AAABZsHtt9AABVguNTA5AAAD2zCCA9cw
      ggNAoAMCAQICCQCsoDo3PlLi9DANBgkqhkiG9w0BAQUFADCBpDELMAkGA1UEBhMC
      VVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEjAQBgNVBAcTCVNhbiBEaWVnbzEPMA0G
      A1UEChMGQXBwT3BzMQ8wDQYDVQQLEwZBcHBPcHMxHjAcBgNVBAMTFWthZmthLmlk
      YW5hbHl0aWNzLmNvbTEqMCgGCSqGSIb3DQEJARYbbWF0dF9icmFudHZleW5Ac3lt
      YW50ZWMuY29tMB4XDTE4MTAyOTIyMjQyN1oXDTE5MTAyOTIyMjQyN1owgaQxCzAJ
      BgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYDVQQHEwlTYW4gRGll
      Z28xDzANBgNVBAoTBkFwcE9wczEPMA0GA1UECxMGQXBwT3BzMR4wHAYDVQQDExVr
      YWZrYS5pZGFuYWx5dGljcy5jb20xKjAoBgkqhkiG9w0BCQEWG21hdHRfYnJhbnR2
      ZXluQHN5bWFudGVjLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAy57A
      iVhgp1MXGq4EG0mASDeZWmv28jbFyAWtgLafRUKbWNSTd9RBOnbJcA2mx1SJ9hLo
      RoiuXb7QSbYCuIcIXq64n32TrosRb6lk4UBB3H9k8qG2/TEu+lXbAw9Z/KYFC5aD
      Y4m7COHqI909Av/pynzTNaZGbHA5biJQvOIQhc0CAwEAAaOCAQ0wggEJMB0GA1Ud
      DgQWBBR6BwTYAXONYq2fwXiCzoaN+L9XdDCB2QYDVR0jBIHRMIHOgBR6BwTYAXON
      Yq2fwXiCzoaN+L9XdKGBqqSBpzCBpDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNh
      bGlmb3JuaWExEjAQBgNVBAcTCVNhbiBEaWVnbzEPMA0GA1UEChMGQXBwT3BzMQ8w
      DQYDVQQLEwZBcHBPcHMxHjAcBgNVBAMTFWthZmthLmlkYW5hbHl0aWNzLmNvbTEq
      MCgGCSqGSIb3DQEJARYbbWF0dF9icmFudHZleW5Ac3ltYW50ZWMuY29tggkArKA6
      Nz5S4vQwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOBgQAGc2dRY8JVSBnl
      ocrh6DIo6rIxc2lYkQbszK3l+7iO0iuIZZj/YXIzm0j9qdPr1vzLJA+aJCxkblM9
      d3AYaa/jZ+jqx+0KAChkgb/4cpgRAx3PojBHwPu/f5xSa/1BhbvPM9W9MsnwIqHK
      8gZSHiHashY3ylIN00J/FD9QUwhTMqFg5FUo+X8W2c+sBWwK0xu9mCs1
    keyStoreFileData: |
      /u3+7QAAAAIAAAACAAAAAgAGY2Fyb290AAABZsHt3oEABVguNTA5AAAD2zCCA9cw
      ggNAoAMCAQICCQCsoDo3PlLi9DANBgkqhkiG9w0BAQUFADCBpDELMAkGA1UEBhMC
      VVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEjAQBgNVBAcTCVNhbiBEaWVnbzEPMA0G
      A1UEChMGQXBwT3BzMQ8wDQYDVQQLEwZBcHBPcHMxHjAcBgNVBAMTFWthZmthLmlk
      YW5hbHl0aWNzLmNvbTEqMCgGCSqGSIb3DQEJARYbbWF0dF9icmFudHZleW5Ac3lt
      YW50ZWMuY29tMB4XDTE4MTAyOTIyMjQyN1oXDTE5MTAyOTIyMjQyN1owgaQxCzAJ
      BgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYDVQQHEwlTYW4gRGll
      Z28xDzANBgNVBAoTBkFwcE9wczEPMA0GA1UECxMGQXBwT3BzMR4wHAYDVQQDExVr
      YWZrYS5pZGFuYWx5dGljcy5jb20xKjAoBgkqhkiG9w0BCQEWG21hdHRfYnJhbnR2
      ZXluQHN5bWFudGVjLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAy57A
      iVhgp1MXGq4EG0mASDeZWmv28jbFyAWtgLafRUKbWNSTd9RBOnbJcA2mx1SJ9hLo
      RoiuXb7QSbYCuIcIXq64n32TrosRb6lk4UBB3H9k8qG2/TEu+lXbAw9Z/KYFC5aD
      Y4m7COHqI909Av/pynzTNaZGbHA5biJQvOIQhc0CAwEAAaOCAQ0wggEJMB0GA1Ud
      DgQWBBR6BwTYAXONYq2fwXiCzoaN+L9XdDCB2QYDVR0jBIHRMIHOgBR6BwTYAXON
      Yq2fwXiCzoaN+L9XdKGBqqSBpzCBpDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNh
      bGlmb3JuaWExEjAQBgNVBAcTCVNhbiBEaWVnbzEPMA0GA1UEChMGQXBwT3BzMQ8w
      DQYDVQQLEwZBcHBPcHMxHjAcBgNVBAMTFWthZmthLmlkYW5hbHl0aWNzLmNvbTEq
      MCgGCSqGSIb3DQEJARYbbWF0dF9icmFudHZleW5Ac3ltYW50ZWMuY29tggkArKA6
      Nz5S4vQwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOBgQAGc2dRY8JVSBnl
      ocrh6DIo6rIxc2lYkQbszK3l+7iO0iuIZZj/YXIzm0j9qdPr1vzLJA+aJCxkblM9
      d3AYaa/jZ+jqx+0KAChkgb/4cpgRAx3PojBHwPu/f5xSa/1BhbvPM9W9MsnwIqHK
      8gZSHiHashY3ylIN00J/FD9QUwhTMgAAAAEACWxvY2FsaG9zdAAAAWbB7edqAAAB
      kDCCAYwwDgYKKwYBBAEqAhEBAQUABIIBeO5DXMgcXVe0axfTovQdYP9fApshIsFU
      5ibRZugzD1xCPxnIrGRtMQUj6BCRd3CFJ4nn3TomeN6yl/nahN03P7Y/mfEfMwhl
      UdPxlbvLlGmnIVJUfIOKsNPwAgVcgedneykVjrbB+hssWPlV7FV2lRfE6ezxAmWD
      RDvdlJUxX+0yIaKi/ollRB6+HohqPq3c3i0xz5bOdgExT88SrJna1UFpEgXGonC0
      wlhL5KqQZDCg+tWSz6O0N4LWghbJ6F2GFncpbfOwG8QJniugFDqiI0nh0cjmODQQ
      NYQ6Ta8U26AnGBCZqvEFIGDRj5UYM46ykF1EDpVXx2ROBMT/z/Fp9rkOuXlhZqle
      TOcKzvZicYxqkSxoWD3NehHrdqsZXKVf0gSEi1oCVqngAZSowjEfhJB+xZ5DNCsC
      zFpSRe2hbDoFS89ba4bhfj2dVRCtDnXcFRcS2lUEThreSuB7C+FcnMsfj9FOCZLp
      y5tfhaSFLRMRUkn5JyJTj28AAAACAAVYLjUwOQAAA6MwggOfMIIDCAIJAJXxAcMG
      IW57MA0GCSqGSIb3DQEBBQUAMIGkMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2Fs
      aWZvcm5pYTESMBAGA1UEBxMJU2FuIERpZWdvMQ8wDQYDVQQKEwZBcHBPcHMxDzAN
      BgNVBAsTBkFwcE9wczEeMBwGA1UEAxMVa2Fma2EuaWRhbmFseXRpY3MuY29tMSow
      KAYJKoZIhvcNAQkBFhttYXR0X2JyYW50dmV5bkBzeW1hbnRlYy5jb20wHhcNMTgx
      MDI5MjIyNDQwWhcNMTkxMDI5MjIyNDQwWjBpMQswCQYDVQQGEwJVUzETMBEGA1UE
      CBMKQ2FsaWZvcm5pYTESMBAGA1UEBxMJU2FuIERpZWdvMQ0wCwYDVQQKEwRTWU1D
      MQ8wDQYDVQQLEwZBcHBPcHMxETAPBgNVBAMTCElEQUFkbWluMIIBuDCCASwGByqG
      SM44BAEwggEfAoGBAP1/U4EddRIpUt9KnC7s5Of2EbdSPO9EAMMeP4C2USZpRV1A
      IlH7WT2NWPq/xfW6MPbLm1Vs14E7gB00b/JmYLdrmVClpJ+f6AR7ECLCT7up1/63
      xhv4O1fnxqimFQ8E+4P208UewwI1VBNaFpEy9nXzrith1yrv8iIDGZ3RSAHHAhUA
      l2BQjxUjC8yykrmCouuEC/BYHPUCgYEA9+GghdabPd7LvKtcNrhXuXmUr7v6OuqC
      +VdMCz0HgmdRWVeOutRZT+ZxBxCBgLRJFnEj6EwoFhO3zwkyjMim4TwWeotUfI0o
      4KOuHiuzpnWRbqN/C/ohNWLx+2J6ASQ7zKTxvqhRkImog9/hWuWfBpKLZl6Ae1Ul
      ZAFMO/7PSSoDgYUAAoGBAMLO60WpZ8Tuq3h6u9BpURI606SuoqHUCBiyorkC0e7l
      V5FFiSmc6z9Asn1bk/HhJ1R5DwqX9nHb1dOcN5ciofHT1Gw6uUm3IFHDMubLjkDd
      2PgHVTTq51zD3W2L3tsjXzk3AEEBlnUFQmGo89xZ69QmD2osligUCI5PcGxkAPHX
      MA0GCSqGSIb3DQEBBQUAA4GBACXAu99LyBmD0W04AB8Rco8QJEeyL1IJ5ZPickci
      TiGizTNE3lIZGxjU8qmHyUk58JyFHf/6u4fRSaziSCFLhSKPGPI8cPPEOSvqx+Aa
      zrmlth4dEPCkAgtWEaJJf4aHvWZ7Cv+VJxvk0PJhuN9JGzIsOmgetSjJlwujNMwq
      8b3DAAVYLjUwOQAAA9swggPXMIIDQKADAgECAgkArKA6Nz5S4vQwDQYJKoZIhvcN
      AQEFBQAwgaQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYD
      VQQHEwlTYW4gRGllZ28xDzANBgNVBAoTBkFwcE9wczEPMA0GA1UECxMGQXBwT3Bz
      MR4wHAYDVQQDExVrYWZrYS5pZGFuYWx5dGljcy5jb20xKjAoBgkqhkiG9w0BCQEW
      G21hdHRfYnJhbnR2ZXluQHN5bWFudGVjLmNvbTAeFw0xODEwMjkyMjI0MjdaFw0x
      OTEwMjkyMjI0MjdaMIGkMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5p
      YTESMBAGA1UEBxMJU2FuIERpZWdvMQ8wDQYDVQQKEwZBcHBPcHMxDzANBgNVBAsT
      BkFwcE9wczEeMBwGA1UEAxMVa2Fma2EuaWRhbmFseXRpY3MuY29tMSowKAYJKoZI
      hvcNAQkBFhttYXR0X2JyYW50dmV5bkBzeW1hbnRlYy5jb20wgZ8wDQYJKoZIhvcN
      AQEBBQADgY0AMIGJAoGBAMuewIlYYKdTFxquBBtJgEg3mVpr9vI2xcgFrYC2n0VC
      m1jUk3fUQTp2yXANpsdUifYS6EaIrl2+0Em2AriHCF6uuJ99k66LEW+pZOFAQdx/
      ZPKhtv0xLvpV2wMPWfymBQuWg2OJuwjh6iPdPQL/6cp80zWmRmxwOW4iULziEIXN
      AgMBAAGjggENMIIBCTAdBgNVHQ4EFgQUegcE2AFzjWKtn8F4gs6Gjfi/V3QwgdkG
      A1UdIwSB0TCBzoAUegcE2AFzjWKtn8F4gs6Gjfi/V3ShgaqkgacwgaQxCzAJBgNV
      BAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYDVQQHEwlTYW4gRGllZ28x
      DzANBgNVBAoTBkFwcE9wczEPMA0GA1UECxMGQXBwT3BzMR4wHAYDVQQDExVrYWZr
      YS5pZGFuYWx5dGljcy5jb20xKjAoBgkqhkiG9w0BCQEWG21hdHRfYnJhbnR2ZXlu
      QHN5bWFudGVjLmNvbYIJAKygOjc+UuL0MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcN
      AQEFBQADgYEABnNnUWPCVUgZ5aHK4egyKOqyMXNpWJEG7Myt5fu4jtIriGWY/2Fy
      M5tI/anT69b8yyQPmiQsZG5TPXdwGGmv42fo6sftCgAoZIG/+HKYEQMdz6IwR8D7
      v3+cUmv9QYW7zzPVvTLJ8CKhyvIGUh4h2rIWN8pSDdNCfxQ/UFMIUzLBfCXb8saB
      QngBz07+PRdPmycqCg==
    keystorePassword: test1234
    keyPassword: test1234
    truststorePassword: test1234
  resources: {}
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

## ------------------------------------------------------
## Schema Registry
## ------------------------------------------------------
cp-schema-registry:
  enabled: true
  image: confluentinc/cp-schema-registry
  imageTag: 5.3.1
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  resources: {}
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

## ------------------------------------------------------
## REST Proxy
## ------------------------------------------------------
cp-kafka-rest:
  enabled: true
  image: confluentinc/cp-kafka-rest
  imageTag: 5.3.1
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  resources: {}
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

## ------------------------------------------------------
## Kafka Connect
## ------------------------------------------------------
cp-kafka-connect:
  enabled: true
  image: confluentinc/cp-kafka-connect
  imageTag: 5.3.1
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  resources: {}
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi
  kafka:
    bootstrapSSL: true

## ------------------------------------------------------
## KSQL Server
## ------------------------------------------------------
cp-ksql-server:
  enabled: true
  image: confluentinc/cp-ksql-server
  imageTag: 5.3.1
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  ksql:
    headless: false

## ------------------------------------------------------
## Control Center
## ------------------------------------------------------
cp-control-center:
  enabled: true
  image: confluentinc/cp-enterprise-control-center
  imageTag: 5.2.0
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  resources: {}
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi
global:
  kafka:
    ssl:
      enabled: true
      truststoreFileData: |
        /u3+7QAAAAIAAAABAAAAAgAGY2Fyb290AAABZsHtt9AABVguNTA5AAAD2zCCA9cw
        ggNAoAMCAQICCQCsoDo3PlLi9DANBgkqhkiG9w0BAQUFADCBpDELMAkGA1UEBhMC
        VVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEjAQBgNVBAcTCVNhbiBEaWVnbzEPMA0G
        A1UEChMGQXBwT3BzMQ8wDQYDVQQLEwZBcHBPcHMxHjAcBgNVBAMTFWthZmthLmlk
        YW5hbHl0aWNzLmNvbTEqMCgGCSqGSIb3DQEJARYbbWF0dF9icmFudHZleW5Ac3lt
        YW50ZWMuY29tMB4XDTE4MTAyOTIyMjQyN1oXDTE5MTAyOTIyMjQyN1owgaQxCzAJ
        BgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYDVQQHEwlTYW4gRGll
        Z28xDzANBgNVBAoTBkFwcE9wczEPMA0GA1UECxMGQXBwT3BzMR4wHAYDVQQDExVr
        YWZrYS5pZGFuYWx5dGljcy5jb20xKjAoBgkqhkiG9w0BCQEWG21hdHRfYnJhbnR2
        ZXluQHN5bWFudGVjLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAy57A
        iVhgp1MXGq4EG0mASDeZWmv28jbFyAWtgLafRUKbWNSTd9RBOnbJcA2mx1SJ9hLo
        RoiuXb7QSbYCuIcIXq64n32TrosRb6lk4UBB3H9k8qG2/TEu+lXbAw9Z/KYFC5aD
        Y4m7COHqI909Av/pynzTNaZGbHA5biJQvOIQhc0CAwEAAaOCAQ0wggEJMB0GA1Ud
        DgQWBBR6BwTYAXONYq2fwXiCzoaN+L9XdDCB2QYDVR0jBIHRMIHOgBR6BwTYAXON
        Yq2fwXiCzoaN+L9XdKGBqqSBpzCBpDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNh
        bGlmb3JuaWExEjAQBgNVBAcTCVNhbiBEaWVnbzEPMA0GA1UEChMGQXBwT3BzMQ8w
        DQYDVQQLEwZBcHBPcHMxHjAcBgNVBAMTFWthZmthLmlkYW5hbHl0aWNzLmNvbTEq
        MCgGCSqGSIb3DQEJARYbbWF0dF9icmFudHZleW5Ac3ltYW50ZWMuY29tggkArKA6
        Nz5S4vQwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOBgQAGc2dRY8JVSBnl
        ocrh6DIo6rIxc2lYkQbszK3l+7iO0iuIZZj/YXIzm0j9qdPr1vzLJA+aJCxkblM9
        d3AYaa/jZ+jqx+0KAChkgb/4cpgRAx3PojBHwPu/f5xSa/1BhbvPM9W9MsnwIqHK
        8gZSHiHashY3ylIN00J/FD9QUwhTMqFg5FUo+X8W2c+sBWwK0xu9mCs1
      keystoreFileData: |
        /u3+7QAAAAIAAAACAAAAAgAGY2Fyb290AAABZsHt3oEABVguNTA5AAAD2zCCA9cw
        ggNAoAMCAQICCQCsoDo3PlLi9DANBgkqhkiG9w0BAQUFADCBpDELMAkGA1UEBhMC
        VVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEjAQBgNVBAcTCVNhbiBEaWVnbzEPMA0G
        A1UEChMGQXBwT3BzMQ8wDQYDVQQLEwZBcHBPcHMxHjAcBgNVBAMTFWthZmthLmlk
        YW5hbHl0aWNzLmNvbTEqMCgGCSqGSIb3DQEJARYbbWF0dF9icmFudHZleW5Ac3lt
        YW50ZWMuY29tMB4XDTE4MTAyOTIyMjQyN1oXDTE5MTAyOTIyMjQyN1owgaQxCzAJ
        BgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYDVQQHEwlTYW4gRGll
        Z28xDzANBgNVBAoTBkFwcE9wczEPMA0GA1UECxMGQXBwT3BzMR4wHAYDVQQDExVr
        YWZrYS5pZGFuYWx5dGljcy5jb20xKjAoBgkqhkiG9w0BCQEWG21hdHRfYnJhbnR2
        ZXluQHN5bWFudGVjLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAy57A
        iVhgp1MXGq4EG0mASDeZWmv28jbFyAWtgLafRUKbWNSTd9RBOnbJcA2mx1SJ9hLo
        RoiuXb7QSbYCuIcIXq64n32TrosRb6lk4UBB3H9k8qG2/TEu+lXbAw9Z/KYFC5aD
        Y4m7COHqI909Av/pynzTNaZGbHA5biJQvOIQhc0CAwEAAaOCAQ0wggEJMB0GA1Ud
        DgQWBBR6BwTYAXONYq2fwXiCzoaN+L9XdDCB2QYDVR0jBIHRMIHOgBR6BwTYAXON
        Yq2fwXiCzoaN+L9XdKGBqqSBpzCBpDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNh
        bGlmb3JuaWExEjAQBgNVBAcTCVNhbiBEaWVnbzEPMA0GA1UEChMGQXBwT3BzMQ8w
        DQYDVQQLEwZBcHBPcHMxHjAcBgNVBAMTFWthZmthLmlkYW5hbHl0aWNzLmNvbTEq
        MCgGCSqGSIb3DQEJARYbbWF0dF9icmFudHZleW5Ac3ltYW50ZWMuY29tggkArKA6
        Nz5S4vQwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOBgQAGc2dRY8JVSBnl
        ocrh6DIo6rIxc2lYkQbszK3l+7iO0iuIZZj/YXIzm0j9qdPr1vzLJA+aJCxkblM9
        d3AYaa/jZ+jqx+0KAChkgb/4cpgRAx3PojBHwPu/f5xSa/1BhbvPM9W9MsnwIqHK
        8gZSHiHashY3ylIN00J/FD9QUwhTMgAAAAEACWxvY2FsaG9zdAAAAWbB7edqAAAB
        kDCCAYwwDgYKKwYBBAEqAhEBAQUABIIBeO5DXMgcXVe0axfTovQdYP9fApshIsFU
        5ibRZugzD1xCPxnIrGRtMQUj6BCRd3CFJ4nn3TomeN6yl/nahN03P7Y/mfEfMwhl
        UdPxlbvLlGmnIVJUfIOKsNPwAgVcgedneykVjrbB+hssWPlV7FV2lRfE6ezxAmWD
        RDvdlJUxX+0yIaKi/ollRB6+HohqPq3c3i0xz5bOdgExT88SrJna1UFpEgXGonC0
        wlhL5KqQZDCg+tWSz6O0N4LWghbJ6F2GFncpbfOwG8QJniugFDqiI0nh0cjmODQQ
        NYQ6Ta8U26AnGBCZqvEFIGDRj5UYM46ykF1EDpVXx2ROBMT/z/Fp9rkOuXlhZqle
        TOcKzvZicYxqkSxoWD3NehHrdqsZXKVf0gSEi1oCVqngAZSowjEfhJB+xZ5DNCsC
        zFpSRe2hbDoFS89ba4bhfj2dVRCtDnXcFRcS2lUEThreSuB7C+FcnMsfj9FOCZLp
        y5tfhaSFLRMRUkn5JyJTj28AAAACAAVYLjUwOQAAA6MwggOfMIIDCAIJAJXxAcMG
        IW57MA0GCSqGSIb3DQEBBQUAMIGkMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2Fs
        aWZvcm5pYTESMBAGA1UEBxMJU2FuIERpZWdvMQ8wDQYDVQQKEwZBcHBPcHMxDzAN
        BgNVBAsTBkFwcE9wczEeMBwGA1UEAxMVa2Fma2EuaWRhbmFseXRpY3MuY29tMSow
        KAYJKoZIhvcNAQkBFhttYXR0X2JyYW50dmV5bkBzeW1hbnRlYy5jb20wHhcNMTgx
        MDI5MjIyNDQwWhcNMTkxMDI5MjIyNDQwWjBpMQswCQYDVQQGEwJVUzETMBEGA1UE
        CBMKQ2FsaWZvcm5pYTESMBAGA1UEBxMJU2FuIERpZWdvMQ0wCwYDVQQKEwRTWU1D
        MQ8wDQYDVQQLEwZBcHBPcHMxETAPBgNVBAMTCElEQUFkbWluMIIBuDCCASwGByqG
        SM44BAEwggEfAoGBAP1/U4EddRIpUt9KnC7s5Of2EbdSPO9EAMMeP4C2USZpRV1A
        IlH7WT2NWPq/xfW6MPbLm1Vs14E7gB00b/JmYLdrmVClpJ+f6AR7ECLCT7up1/63
        xhv4O1fnxqimFQ8E+4P208UewwI1VBNaFpEy9nXzrith1yrv8iIDGZ3RSAHHAhUA
        l2BQjxUjC8yykrmCouuEC/BYHPUCgYEA9+GghdabPd7LvKtcNrhXuXmUr7v6OuqC
        +VdMCz0HgmdRWVeOutRZT+ZxBxCBgLRJFnEj6EwoFhO3zwkyjMim4TwWeotUfI0o
        4KOuHiuzpnWRbqN/C/ohNWLx+2J6ASQ7zKTxvqhRkImog9/hWuWfBpKLZl6Ae1Ul
        ZAFMO/7PSSoDgYUAAoGBAMLO60WpZ8Tuq3h6u9BpURI606SuoqHUCBiyorkC0e7l
        V5FFiSmc6z9Asn1bk/HhJ1R5DwqX9nHb1dOcN5ciofHT1Gw6uUm3IFHDMubLjkDd
        2PgHVTTq51zD3W2L3tsjXzk3AEEBlnUFQmGo89xZ69QmD2osligUCI5PcGxkAPHX
        MA0GCSqGSIb3DQEBBQUAA4GBACXAu99LyBmD0W04AB8Rco8QJEeyL1IJ5ZPickci
        TiGizTNE3lIZGxjU8qmHyUk58JyFHf/6u4fRSaziSCFLhSKPGPI8cPPEOSvqx+Aa
        zrmlth4dEPCkAgtWEaJJf4aHvWZ7Cv+VJxvk0PJhuN9JGzIsOmgetSjJlwujNMwq
        8b3DAAVYLjUwOQAAA9swggPXMIIDQKADAgECAgkArKA6Nz5S4vQwDQYJKoZIhvcN
        AQEFBQAwgaQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYD
        VQQHEwlTYW4gRGllZ28xDzANBgNVBAoTBkFwcE9wczEPMA0GA1UECxMGQXBwT3Bz
        MR4wHAYDVQQDExVrYWZrYS5pZGFuYWx5dGljcy5jb20xKjAoBgkqhkiG9w0BCQEW
        G21hdHRfYnJhbnR2ZXluQHN5bWFudGVjLmNvbTAeFw0xODEwMjkyMjI0MjdaFw0x
        OTEwMjkyMjI0MjdaMIGkMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5p
        YTESMBAGA1UEBxMJU2FuIERpZWdvMQ8wDQYDVQQKEwZBcHBPcHMxDzANBgNVBAsT
        BkFwcE9wczEeMBwGA1UEAxMVa2Fma2EuaWRhbmFseXRpY3MuY29tMSowKAYJKoZI
        hvcNAQkBFhttYXR0X2JyYW50dmV5bkBzeW1hbnRlYy5jb20wgZ8wDQYJKoZIhvcN
        AQEBBQADgY0AMIGJAoGBAMuewIlYYKdTFxquBBtJgEg3mVpr9vI2xcgFrYC2n0VC
        m1jUk3fUQTp2yXANpsdUifYS6EaIrl2+0Em2AriHCF6uuJ99k66LEW+pZOFAQdx/
        ZPKhtv0xLvpV2wMPWfymBQuWg2OJuwjh6iPdPQL/6cp80zWmRmxwOW4iULziEIXN
        AgMBAAGjggENMIIBCTAdBgNVHQ4EFgQUegcE2AFzjWKtn8F4gs6Gjfi/V3QwgdkG
        A1UdIwSB0TCBzoAUegcE2AFzjWKtn8F4gs6Gjfi/V3ShgaqkgacwgaQxCzAJBgNV
        BAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYDVQQHEwlTYW4gRGllZ28x
        DzANBgNVBAoTBkFwcE9wczEPMA0GA1UECxMGQXBwT3BzMR4wHAYDVQQDExVrYWZr
        YS5pZGFuYWx5dGljcy5jb20xKjAoBgkqhkiG9w0BCQEWG21hdHRfYnJhbnR2ZXlu
        QHN5bWFudGVjLmNvbYIJAKygOjc+UuL0MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcN
        AQEFBQADgYEABnNnUWPCVUgZ5aHK4egyKOqyMXNpWJEG7Myt5fu4jtIriGWY/2Fy
        M5tI/anT69b8yyQPmiQsZG5TPXdwGGmv42fo6sftCgAoZIG/+HKYEQMdz6IwR8D7
        v3+cUmv9QYW7zzPVvTLJ8CKhyvIGUh4h2rIWN8pSDdNCfxQ/UFMIUzLBfCXb8saB
        QngBz07+PRdPmycqCg==
      keystorePassword: test1234
      keyPassword: test1234
      truststorePassword: test1234
      client:
        auth: required
        brokerPrincipals: User:CN=*.confluent-cp-kafka-headless.confluent.svc.cluster.local;User:CN=internal
        truststoreFile: kafka.client.truststore.jks
        truststorePassword: test1234
        keystoreFile: kafka.internal.keystore.jks
        keystorePassword: test1234
        keyPassword: test1234
      broker:
        truststoreFile: kafka.server.truststore.jks
        keystoreFile: kafka.server.keystore.jks
        keystorePassword: test1234
        keyPassword: test1234
        truststorePassword: test1234
